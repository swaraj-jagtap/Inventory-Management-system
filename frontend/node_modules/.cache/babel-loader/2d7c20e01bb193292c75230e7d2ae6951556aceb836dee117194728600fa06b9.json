{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\OneDrive\\\\Desktop\\\\inventory-app\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport Notification from './components/Notification';\nimport Dashboard from './pages/Dashboard';\nimport Inventory from './pages/Inventory';\nimport Billing from './pages/Billing';\nimport GenericEntityPage from './pages/GenericEntityPage';\nimport LoginPage from './pages/LoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api';\nexport default function App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [page, setPage] = useState('dashboard');\n  const [products, setProducts] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [notification, setNotification] = useState({\n    message: '',\n    type: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const [productsRes, customersRes] = await Promise.all([fetch(`${API_URL}/products`), fetch(`${API_URL}/customers`)]);\n      const productsData = await productsRes.json();\n      const customersData = await customersRes.json();\n      setProducts(productsData);\n      setCustomers(customersData);\n    } catch (error) {\n      console.error(\"Failed to fetch data:\", error);\n      showNotification(\"Could not connect to the server.\", \"error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      fetchData();\n    }\n  }, [user]);\n  const showNotification = (message, type = 'info') => {\n    setNotification({\n      message,\n      type\n    });\n  };\n  const handleLogin = userData => {\n    setUser(userData);\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setPage('dashboard');\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen bg-gray-900 text-white items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n  const renderPage = () => {\n    switch (page) {\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          products: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this);\n      case 'inventory':\n        return /*#__PURE__*/_jsxDEV(Inventory, {\n          products: products,\n          API_URL: API_URL,\n          showNotification: showNotification,\n          refreshData: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this);\n      case 'billing':\n        return /*#__PURE__*/_jsxDEV(Billing, {\n          products: products,\n          customers: customers,\n          API_URL: API_URL,\n          showNotification: showNotification,\n          refreshData: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this);\n      case 'customers':\n        return /*#__PURE__*/_jsxDEV(GenericEntityPage, {\n          title: \"Customers\",\n          items: customers,\n          API_URL: `${API_URL}/customers`,\n          refreshData: fetchData,\n          entityName: \"Customer\",\n          formFields: [{\n            name: 'name',\n            type: 'text',\n            placeholder: 'Customer Name'\n          }, {\n            name: 'email',\n            type: 'email',\n            placeholder: 'Email Address'\n          }, {\n            name: 'phone',\n            type: 'tel',\n            placeholder: 'Phone Number'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          products: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-900 text-white font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      type: notification.type,\n      onClose: () => setNotification({\n        message: '',\n        type: ''\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      user: user,\n      onNavigate: setPage,\n      activePage: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 overflow-x-hidden overflow-y-auto bg-gray-900\",\n        children: renderPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"cV/v3C+8b51BCHaCxH5FPqdEYSs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Header","Notification","Dashboard","Inventory","Billing","GenericEntityPage","LoginPage","jsxDEV","_jsxDEV","API_URL","App","_s","user","setUser","page","setPage","products","setProducts","customers","setCustomers","notification","setNotification","message","type","loading","setLoading","fetchData","productsRes","customersRes","Promise","all","fetch","productsData","json","customersData","error","console","showNotification","handleLogin","userData","handleLogout","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","renderPage","refreshData","title","items","entityName","formFields","name","placeholder","onClose","onNavigate","activePage","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/santo/OneDrive/Desktop/inventory-app/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport Header from './components/Header';\r\nimport Notification from './components/Notification';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Inventory from './pages/Inventory';\r\nimport Billing from './pages/Billing';\r\nimport GenericEntityPage from './pages/GenericEntityPage';\r\nimport LoginPage from './pages/LoginPage';\r\n\r\nconst API_URL = 'http://localhost:5001/api';\r\n\r\nexport default function App() {\r\n    const [user, setUser] = useState(null);\r\n    const [page, setPage] = useState('dashboard');\r\n    const [products, setProducts] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [notification, setNotification] = useState({ message: '', type: '' });\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const [productsRes, customersRes] = await Promise.all([\r\n                fetch(`${API_URL}/products`),\r\n                fetch(`${API_URL}/customers`),\r\n            ]);\r\n            const productsData = await productsRes.json();\r\n            const customersData = await customersRes.json();\r\n            setProducts(productsData);\r\n            setCustomers(customersData);\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch data:\", error);\r\n            showNotification(\"Could not connect to the server.\", \"error\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            fetchData();\r\n        }\r\n    }, [user]);\r\n\r\n    const showNotification = (message, type = 'info') => {\r\n        setNotification({ message, type });\r\n    };\r\n\r\n    const handleLogin = (userData) => {\r\n        setUser(userData);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        setUser(null);\r\n        setPage('dashboard');\r\n    };\r\n\r\n    if (!user) {\r\n        return <LoginPage onLogin={handleLogin} />;\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex h-screen bg-gray-900 text-white items-center justify-center\">\r\n                <p>Loading Data...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderPage = () => {\r\n        switch (page) {\r\n            case 'dashboard':\r\n                return <Dashboard products={products} />;\r\n            case 'inventory':\r\n                return <Inventory products={products} API_URL={API_URL} showNotification={showNotification} refreshData={fetchData} />;\r\n            case 'billing':\r\n                return <Billing products={products} customers={customers} API_URL={API_URL} showNotification={showNotification} refreshData={fetchData} />;\r\n            case 'customers':\r\n                return <GenericEntityPage \r\n                    title=\"Customers\"\r\n                    items={customers}\r\n                    API_URL={`${API_URL}/customers`}\r\n                    refreshData={fetchData}\r\n                    entityName=\"Customer\"\r\n                    formFields={[\r\n                        { name: 'name', type: 'text', placeholder: 'Customer Name' },\r\n                        { name: 'email', type: 'email', placeholder: 'Email Address' },\r\n                        { name: 'phone', type: 'tel', placeholder: 'Phone Number' },\r\n                    ]}\r\n                />;\r\n            default:\r\n                return <Dashboard products={products} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-900 text-white font-sans\">\r\n            <Notification message={notification.message} type={notification.type} onClose={() => setNotification({ message: '', type: '' })} />\r\n            <Sidebar user={user} onNavigate={setPage} activePage={page} />\r\n            <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n                <Header user={user} onLogout={handleLogout} />\r\n                <main className=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-900\">\r\n                    {renderPage()}\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}