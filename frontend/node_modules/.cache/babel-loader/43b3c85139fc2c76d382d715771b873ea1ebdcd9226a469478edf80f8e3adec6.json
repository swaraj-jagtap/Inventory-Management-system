{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\OneDrive\\\\Desktop\\\\inventory-app\\\\src\\\\components\\\\Barcode.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport JsBarcode from 'jsbarcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BarcodeCanvas = ({\n  value\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current) {\n      try {\n        JsBarcode(canvasRef.current, value, {\n          format: 'CODE128',\n          lineColor: '#ffffff',\n          background: '#2d3748',\n          width: 2,\n          height: 50,\n          displayValue: true,\n          fontOptions: \"bold\",\n          font: \"Inter\",\n          fontSize: 16,\n          textColor: \"#ffffff\",\n          margin: 10\n        });\n      } catch (e) {\n        console.error(\"Barcode generation failed:\", e);\n      }\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n_s(BarcodeCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = BarcodeCanvas;\nexport const PrintableBarcodeCanvas = ({\n  value\n}) => {\n  _s2();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current) {\n      try {\n        JsBarcode(canvasRef.current, value, {\n          format: 'CODE128',\n          lineColor: '#000000',\n          background: '#ffffff',\n          width: 1.5,\n          height: 40,\n          displayValue: false,\n          margin: 10\n        });\n      } catch (e) {\n        console.error(\"Printable Barcode generation failed:\", e);\n      }\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s2(PrintableBarcodeCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = PrintableBarcodeCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"BarcodeCanvas\");\n$RefreshReg$(_c2, \"PrintableBarcodeCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","JsBarcode","jsxDEV","_jsxDEV","BarcodeCanvas","value","_s","canvasRef","current","format","lineColor","background","width","height","displayValue","fontOptions","font","fontSize","textColor","margin","e","console","error","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","PrintableBarcodeCanvas","_s2","_c2","$RefreshReg$"],"sources":["C:/Users/santo/OneDrive/Desktop/inventory-app/src/components/Barcode.js"],"sourcesContent":["\r\nimport React, { useRef, useEffect } from 'react';\r\nimport JsBarcode from 'jsbarcode';\r\n\r\nexport const BarcodeCanvas = ({ value }) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current) {\r\n            try {\r\n                JsBarcode(canvasRef.current, value, {\r\n                    format: 'CODE128',\r\n                    lineColor: '#ffffff',\r\n                    background: '#2d3748',\r\n                    width: 2,\r\n                    height: 50,\r\n                    displayValue: true,\r\n                    fontOptions: \"bold\",\r\n                    font: \"Inter\",\r\n                    fontSize: 16,\r\n                    textColor: \"#ffffff\",\r\n                    margin: 10\r\n                });\r\n            } catch (e) {\r\n                console.error(\"Barcode generation failed:\", e);\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport const PrintableBarcodeCanvas = ({ value }) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current) {\r\n            try {\r\n                JsBarcode(canvasRef.current, value, {\r\n                    format: 'CODE128',\r\n                    lineColor: '#000000',\r\n                    background: '#ffffff',\r\n                    width: 1.5,\r\n                    height: 40,\r\n                    displayValue: false,\r\n                    margin: 10\r\n                });\r\n            } catch (e) {\r\n                console.error(\"Printable Barcode generation failed:\", e);\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAS,CAACC,OAAO,EAAE;MACnB,IAAI;QACAP,SAAS,CAACM,SAAS,CAACC,OAAO,EAAEH,KAAK,EAAE;UAChCI,MAAM,EAAE,SAAS;UACjBC,SAAS,EAAE,SAAS;UACpBC,UAAU,EAAE,SAAS;UACrBC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,EAAE;UACVC,YAAY,EAAE,IAAI;UAClBC,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE,OAAO;UACbC,QAAQ,EAAE,EAAE;UACZC,SAAS,EAAE,SAAS;UACpBC,MAAM,EAAE;QACZ,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,CAAC,CAAC;MAClD;IACJ;EACJ,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBAAOF,OAAA;IAAQoB,GAAG,EAAEhB;EAAU;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAACrB,EAAA,CA1BWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA4B1B,OAAO,MAAMyB,sBAAsB,GAAGA,CAAC;EAAExB;AAAM,CAAC,KAAK;EAAAyB,GAAA;EACjD,MAAMvB,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAS,CAACC,OAAO,EAAE;MACnB,IAAI;QACAP,SAAS,CAACM,SAAS,CAACC,OAAO,EAAEH,KAAK,EAAE;UAChCI,MAAM,EAAE,SAAS;UACjBC,SAAS,EAAE,SAAS;UACpBC,UAAU,EAAE,SAAS;UACrBC,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE,EAAE;UACVC,YAAY,EAAE,KAAK;UACnBK,MAAM,EAAE;QACZ,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEF,CAAC,CAAC;MAC5D;IACJ;EACJ,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBAAOF,OAAA;IAAQoB,GAAG,EAAEhB;EAAU;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAACG,GAAA,CAtBWD,sBAAsB;AAAAE,GAAA,GAAtBF,sBAAsB;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}